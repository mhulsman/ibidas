#!/usr/bin/env python
import sys
import getopt
import os
from ibidas import *
from ibidas.server import Serve
from ibidas import representor

import IPython

ipversion = IPython.__version__.split('.')
oldip = int(ipversion[0]) == 0 and int(ipversion[1]) <= 10

if oldip:
    from IPython.Shell import IPShellEmbed
    from IPython.ipapi import TryNext
    from IPython.genutils import dir2
    import IPython.rlineimpl as readline
else:   
    from IPython.config.loader import Config
    from IPython.frontend.terminal.embed import InteractiveShellEmbed
    
    #from IPython.ipapi import TryNext
    #from IPython.genutils import dir2
    #import IPython.rlineimpl as readline

from ibidas.command_parser import parseCommandLine

import numpy
if numpy.version.version == '1.6.0':
    print 'WARNING: numpy 1.6.0 has a regression (http://projects.scipy.org/numpy/ticket/1870). Some commands wil not work. Please update to a newer version.'
    print ''

nv = numpy.version.version.split('.')
if len(nv) ==3:
    try:
        if int(nv[0]) == 1 and (int(nv[1]) <= 7 or (int(nv[1]) == 4 and int(nv[2]) == 0)):
            print 'WARNING: your numpy version (%s) is too old. Some commands will not work. Please update to a newer version.' % numpy.version.version
            print ''
    except ValueError:
        pass

rc_path = "~/.ibidas_rc"
rc_path = os.path.expanduser(rc_path)
global ipshell
global _rep_res
_rep_res = None

import os
import sys

def which(program):
    def is_exe(fpath):
        return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

    fpath, fname = os.path.split(program)
    if fpath:
        if is_exe(program):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            exe_file = os.path.join(path, program)
            if is_exe(exe_file):
                return exe_file

    return None

interpreter = which('python2')
if interpreter is None:
    interpreter = which('python')
if interpreter is None:
    interpreter = sys.executable

try:
    current_path = os.path.abspath(os.path.dirname(os.path.realpath(__file__)))
except:
    current_path = os.path.abspath(os.path.dirname(os.path.realpath(sys.argv[0])))

if hasattr(os, "execv"):
    os.execv(interpreter, [interpreter, os.path.join(current_path, 'ibidas_shell.py')] + sys.argv[1:])
else:
    import subprocess
    sys.exit(subprocess.Popen([interpreter, os.path.join(current_path, 'ibidas_shell.py')] + sys.argv[1:]).wait())
